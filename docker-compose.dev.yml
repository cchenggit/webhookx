services:
  webhookx-migration:
    image: "webhookx/webhookx:0.2.0"
    container_name: webhookx-migration
    environment:
      WEBHOOKX_DATABASE_HOST: webhookx-database
      WEBHOOKX_DATABASE_USERNAME: webhookx
      WEBHOOKX_DATABASE_DATABASE: webhookx
      WEBHOOKX_DATABASE_PORT: 5432
    command: webhookx migrations up
    depends_on:
      webhookx-database:
        condition: service_healthy

  webhookx:
    build: .
    container_name: webhookx
    environment:
      WEBHOOKX_DATABASE_HOST: webhookx-database
      WEBHOOKX_DATABASE_USERNAME: webhookx
      WEBHOOKX_DATABASE_DATABASE: webhookx
      WEBHOOKX_DATABASE_PORT: 5432
      WEBHOOKX_REDIS_HOST: redis
      WEBHOOKX_REDIS_PORT: 6379
      WEBHOOKX_ADMIN_LISTEN: 0.0.0.0:8080
      WEBHOOKX_WORKER_ENABLED: true
      WEBHOOKX_PROXY_LISTEN: 0.0.0.0:8081
      WEBHOOKX_PROXY_QUEUE_REDIS_HOST: redis
      WEBHOOKX_TRACING_SERVICE_NAME: WebhookX
      WEBHOOKX_TRACING_OPENTELEMETRY_HTTP_ENDPOINT: http://jaeger:4318/v1/traces
    ports:
      - "8080:8080"
      - "8081:8081"
    command: [ "webhookx", "start", "--config", "config.yml" ]
    depends_on:
      webhookx-database:
        condition: service_healthy
      redis:
        condition: service_started
      webhookx-migration:
        condition: service_started

  webhookx-database:
    image: postgres:13
    environment:
      POSTGRES_DB: webhookx
      POSTGRES_USER: webhookx
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 3s
      timeout: 5s
      retries: 3
    volumes:
      - "postgres_data:/var/lib/postgresql/data/"

  redis:
    image: redis:6
    command: "--appendonly yes --appendfsync everysec"
    volumes:
      - "redis_data:/data"
    ports:
      - "6379:6379"
  httpbin:
    image: kennethreitz/httpbin
    ports:
      - 9999:80

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./test/otel-collector-config.yml:/etc/otelcol-contrib/config.yaml
      - ./test/output/otel:/tmp/otel
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension

volumes:
  postgres_data:
  redis_data:
